.ola-bg {
    background-color: var(--color-neutral-100) !important; /* Ensures that it is always applied, regardless of the styles that exist. */

    & > * {
        --color-neutral-100: var(--color-neutral-200);
    }
}
td.ola-bg {
    background-color: var(--color-neutral-100);
}
.ola-bg-hover:hover {
    background-color: var(--color-neutral-100);

    & > * {
        --color-neutral-100: var(--color-neutral-200);
    }
}

/* Text sizes */
.ola-display {
    font: var(--font-display);
    letter-spacing: var(--font-display-spacing);
}
.ola-title {
    font: var(--font-title);
    letter-spacing: var(--font-title-spacing);
}
.ola-headline {
    font: var(--font-headline);
}
.ola-body {
    font: var(--font-body);
}
.ola-callout {
    font: var(--font-callout);
}
.ola-caption {
    font: var(--font-caption);
}

h1,
h2,
h3,
h4,
h5,
h6,
b,
strong {
    &.ola-headline,
    &.ola-body,
    &.ola-callout,
    &.ola-caption {
        font-weight: var(--bold);
    }
}

.ola-normal {
    font-weight: var(--normal) !important; /* Overrides the previous ruleset */
}
.ola-bold {
    font-weight: var(--bold);
}

/* Colors */
.ola-brand {
    color: var(--color-primary-500);
}
.ola-accent {
    color: var(--color-accent-500);
}
.ola-white {
    color: var(--color-white-100);
}
.ola-black {
    color: var(--color-neutral-900);
}
.ola-gray {
    color: var(--color-neutral-700);
}
.ola-gray-light {
    color: var(--color-neutral-400);
}
.ola-gray-xlight {
    color: var(--color-neutral-200);
}
.ola-gray-xxlight {
    color: var(--color-neutral-100);
}
.ola-error {
    color: var(--color-negative-500);
}
.ola-warning {
    color: var(--color-warning-500);
}
.ola-success {
    color: var(--color-positive-500);
}
.ola-pro {
    color: var(--color-pro-500);
}
.ola-black-bolds b,
.ola-black-bolds strong {
    color: var(--color-neutral-900);
}

/* Background colors */
.ola-bg-brand {
    background-color: var(--color-primary-500);
}
.ola-bg-accent {
    background-color: var(--color-accent-500);
}
.ola-bg-white {
    background-color: var(--color-white-100);
}
.ola-bg-black {
    background-color: var(--color-neutral-900);
}
.ola-bg-gray {
    background-color: var(--color-neutral-700);
}
.ola-bg-gray-light {
    background-color: var(--color-neutral-400);
}
.ola-bg-gray-xlight {
    background-color: var(--color-neutral-200);
}
.ola-bg-gray-xxlight {
    background-color: var(--color-neutral-100);
}
.ola-bg-error {
    background-color: var(--color-negative-500);
}
.ola-bg-warning {
    background-color: var(--color-warning-500);
}
.ola-bg-success {
    background-color: var(--color-positive-500);
}
.ola-bg-pro {
    background-color: var(--color-pro-500);
}

/* Alignment */
.ola-right {
    text-align: right;
}
.ola-center {
    text-align: center;
}
.ola-numeric {
    font-variant-numeric: tabular-nums;
    text-align: right;
}

/* Margins and spaces */
.ola-nomargin {
    margin: 0;
}
.ola-nomargin-top {
    margin-top: 0;
}
.ola-nomargin-bottom {
    margin-bottom: 0;
}
.ola-margin-top-1 {
    margin-top: var(--row-gap-1);
}
.ola-margin-top-2 {
    margin-top: var(--row-gap-2);
}
.ola-margin-top-3 {
    margin-top: var(--row-gap-3);
}
.ola-margin-top-4 {
    margin-top: var(--row-gap-4);
}
.ola-margin-bottom-1 {
    margin-bottom: var(--row-gap-1);
}
.ola-margin-bottom-2 {
    margin-bottom: var(--row-gap-2);
}
.ola-margin-bottom-3 {
    margin-bottom: var(--row-gap-3);
}
.ola-margin-bottom-4 {
    margin-bottom: var(--row-gap-4);
}
.ola-margin-left-1 {
    margin-left: var(--column-gap-1);
}
.ola-margin-left-2 {
    margin-left: var(--column-gap-2);
}
.ola-margin-left-3 {
    margin-left: var(--column-gap-3);
}
.ola-margin-right-1 {
    margin-right: var(--column-gap-1);
}
.ola-margin-right-2 {
    margin-right: var(--column-gap-2);
}
.ola-margin-right-3 {
    margin-right: var(--column-gap-3);
}

/* Widths */
.ola-width-narrow {
    max-width: var(--size-11);
}
.ola-width-medium {
    max-width: var(--size-12);
}

/* Skeletor */
.ola-skeleton {
    overflow: hidden;

    & > :empty::before {
        content: "\00a0";
        display: block;
        background-color: var(--color-neutral-200);
        width: var(--skeleton-width, 5em);
        height: var(--skeleton-height, 1em);
    }

    &.is-loading {
        & > :empty::before {
            background: linear-gradient(to right, var(--color-neutral-200) 40%, var(--color-white-100), var(--color-neutral-200) 60%);
            background-size: 800px 100%;
            animation: loadingSkeleton 2s linear infinite;
        }
    }
}

@keyframes loadingSkeleton {
    from {
        background-position: 0 0;
    }
    to {
      background-position: 800px 0;
    }
}